using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.Events;

[CreateAssetMenu(fileName = "{EventName}", menuName = "SO{Category}/{EventName}")]
public class {EventName} : SOEvent
{
    [System.Serializable]
    public class Event : UnityEvent{UnityEventParams} { }

    private Event _event = new Event();

    public void Raise({FunctionParamsDeclaration})
    {
        _event.Invoke({AllParamNames});
    }

    public void AddListener(UnityAction{UnityEventParams} listener)
    {
        _event.AddListener(listener);
    }

	 public void AddUniqueListener(UnityAction{UnityEventParams} listener)
    {
		RemoveListener(listener);
		AddListener(listener);
    }

    public void RemoveListener(UnityAction{UnityEventParams} listener)
    {
        _event.RemoveListener(listener);
    }

	public void SubscribeListener(UnityAction{UnityEventParams} listener, bool shouldListen)
	{
		if (shouldListen)
		{
			AddListener(listener);
		}
		else
		{
			RemoveListener(listener);
		}
	}

#if UNITY_EDITOR

    public override void EditorRaise()
    {
        Raise({AllEditorParamNames});
    }

    {AllEditorParamsDeclarations}

#endif
}
